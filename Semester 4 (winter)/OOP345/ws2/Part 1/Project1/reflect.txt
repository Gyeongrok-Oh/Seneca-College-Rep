The significant time difference between copy and move operations can be attributed to the efficiency of move semantics. In the StringSet class, the move constructor and move assignment operator take advantage of moving resources from the source object (other) to the destination object (this), which is more efficient than copying large amounts of data. This is especially noticeable when dealing with dynamically allocated memory, as in the case of string arrays.

The StringSet constructor reads the input file (gutenberg_shakespeare) twice to determine the number of strings and then to populate the dynamic array. While it may seem redundant, this approach is necessary because we need to know the total number of strings before dynamically allocating memory. Unfortunately, there isn't a way to avoid rereading the file since the size of the array depends on the file content. One optimization could be to use a vector to dynamically adjust its size during reading, eliminating the need for two passes.

The steady_clock and system_clock are both part of the chrono library and are used for measuring time, but they have differences. The steady_clock provides a monotonic clock, which never adjusts and is unaffected by system clock changes. This makes it suitable for measuring durations accurately. On the other hand, system_clock may be adjusted by the system for daylight saving time or other reasons. It is typically used for representing the current time in a calendar.
In the code, steady_clock is chosen for measuring the duration of events because it provides a stable and precise measurement of time, which is essential for performance-related tasks.

